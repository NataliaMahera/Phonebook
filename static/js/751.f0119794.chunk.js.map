{"version":3,"file":"static/js/751.f0119794.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { registerThunk } from 'redux/auth/authOperations';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Text,\n  Link,\n  useToast,\n} from '@chakra-ui/react';\nimport {\n  ArrowRightIcon,\n  AtSignIcon,\n  EmailIcon,\n  InfoOutlineIcon,\n  LockIcon,\n} from '@chakra-ui/icons';\nimport { Link as NavLink } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const toast = useToast();\n\n  const onRegisterSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const name = form.elements.userName.value;\n    const email = form.elements.userEmail.value;\n    const password = form.elements.userPassword.value;\n\n    const formData = {\n      name,\n      email,\n      password,\n    };\n\n    dispatch(registerThunk(formData))\n      .unwrap()\n      .then(() =>\n        toast({\n          title: 'Submitted!',\n          status: 'success',\n          duration: 3000,\n          isClosable: true,\n        })\n      )\n      .catch(() =>\n        toast({\n          title: 'Incorrect e-mail address or password. Try again.',\n          status: 'error',\n          duration: 3000,\n          isClosable: true,\n        })\n      );\n    form.reset();\n  };\n\n  return (\n    <Formik>\n      <Form onSubmit={onRegisterSubmit}>\n        <Box\n          w={[300, 400, 500]}\n          m=\"auto\"\n          mt={20}\n          mb={20}\n          p={5}\n          bg=\"gray.50\"\n          borderRadius=\"lg\"\n          boxShadow=\"dark-lg\"\n        >\n          <FormControl isRequired color=\"teal.800\" marginBottom={'12px'}>\n            <Text\n              textAlign=\"center\"\n              fontSize={{ base: '22px', md: '24px', lg: '32px' }}\n              mb={5}\n              bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n              bgClip=\"text\"\n              fontWeight=\"bold\"\n            >\n              Sign Up\n            </Text>\n            <FormLabel color=\"black\" fontSize={'15px'}>\n              <AtSignIcon\n                w={4}\n                h={4}\n                mr={'8px'}\n                bgGradient=\"linear(to-r, green.200, pink.500)\"\n                borderRadius={2}\n                color=\"black\"\n              />\n              Full name\n            </FormLabel>\n            <Input\n              variant=\"outline\"\n              placeholder=\"Enter fullname\"\n              type=\"text\"\n              name=\"userName\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              autoComplete=\"off\"\n              required\n            />\n          </FormControl>\n          <FormControl isRequired color=\"black\" marginBottom={'12px'}>\n            <FormLabel color=\"black\" fontSize={'15px'}>\n              <EmailIcon\n                w={4}\n                h={4}\n                mr={'8px'}\n                bgGradient=\"linear(to-r, green.200, pink.500)\"\n                borderRadius={2}\n              />\n              Email\n            </FormLabel>\n            <Input\n              variant=\"outline\"\n              type=\"email\"\n              name=\"userEmail\"\n              required\n              placeholder=\"Enter email\"\n              autoComplete=\"off\"\n            />\n          </FormControl>\n          <FormControl isRequired color=\"black\" marginBottom={'12px'}>\n            <FormLabel color=\"black\" fontSize={'15px'}>\n              <LockIcon\n                w={4}\n                h={4}\n                mr={'8px'}\n                color=\"black\"\n                bgGradient=\"linear(to-r, green.200, pink.500)\"\n                borderRadius={2}\n              />\n              Password\n            </FormLabel>\n            <Input\n              variant=\"outline\"\n              type=\"password\"\n              name=\"userPassword\"\n              placeholder=\"Enter password\"\n              required\n              autoComplete=\"off\"\n            />\n          </FormControl>\n          <Button\n            type=\"submit\"\n            w=\"100%\"\n            mt={4}\n            color=\"gray.800\"\n            bg=\"gray.200\"\n            leftIcon={<ArrowRightIcon w={3} h={3} mr={'8px'} />}\n            _hover={{\n              bgGradient:\n                'linear(225deg, #FF3CAC 0%, #784BA0 50%, #2B86C5 100%)',\n              transitionDuration: '0.3s',\n              transform: 'translateY(-5px)',\n              transitionTimingFunction: 'ease-in-out',\n            }}\n          >\n            Sign Up\n          </Button>\n          <Box textAlign=\"center\" mt=\"5\" mb={3}>\n            <Link\n              as={NavLink}\n              to=\"/login\"\n              color=\"gray.500\"\n              m=\"auto\"\n              display={'flex'}\n              justifyContent={'center'}\n              alignItems={'center'}\n            >\n              <InfoOutlineIcon w={4} h={4} mr={'8px'} stroke=\"black\" />\n              Already have an acount? Log in..\n            </Link>\n          </Box>\n        </Box>\n      </Form>\n    </Formik>\n\n    // <form onSubmit={onRegisterSubmit} className={css.form}>\n    //   <label className={css.label}>\n    //     <p>Name</p>\n    //     <input\n    //       type=\"text\"\n    //       name=\"userName\"\n    //       className={css.input}\n    //       pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    //       required\n    //     />\n    //   </label>\n\n    //   <label className={css.label}>\n    //     <p>Email</p>\n    //     <input type=\"email\" name=\"userEmail\" className={css.input} required />\n    //   </label>\n\n    //   <label className={css.label}>\n    //     <p>Password</p>\n    //     <input\n    //       type=\"password\"\n    //       name=\"userPassword\"\n    //       className={css.input}\n    //       required\n    //     />\n    //   </label>\n\n    //   <button type=\"submit\" className={css.addBtn}>\n    //     Sign up\n    //   </button>\n    //   <Link className={css.link} to=\"/login\">\n    //     Already have an acount? Log in\n    //   </Link>\n    // </form>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\nimport React from 'react';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["dispatch","useDispatch","toast","useToast","_jsx","Formik","children","Form","onSubmit","e","preventDefault","form","target","formData","name","elements","userName","value","email","userEmail","password","userPassword","registerThunk","unwrap","then","title","status","duration","isClosable","catch","reset","_jsxs","Box","w","m","mt","mb","p","bg","borderRadius","boxShadow","FormControl","isRequired","color","marginBottom","Text","textAlign","fontSize","base","md","lg","bgGradient","bgClip","fontWeight","FormLabel","AtSignIcon","h","mr","Input","variant","placeholder","type","pattern","autoComplete","required","EmailIcon","LockIcon","Button","leftIcon","ArrowRightIcon","_hover","transitionDuration","transform","transitionTimingFunction","Link","as","NavLink","to","display","justifyContent","alignItems","InfoOutlineIcon","stroke","RegisterForm"],"sourceRoot":""}